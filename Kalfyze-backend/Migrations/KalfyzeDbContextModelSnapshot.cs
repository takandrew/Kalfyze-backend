// <auto-generated />
using System;
using Kalfyze_backend.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Kalfyze_backend.Migrations
{
    [DbContext(typeof(KalfyzeDbContext))]
    partial class KalfyzeDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Kalfyze_backend.Models.Content", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Capacity")
                        .HasColumnType("integer");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<int?>("FranchiseId")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PathToImage")
                        .HasColumnType("text");

                    b.Property<string>("ReleaseDate")
                        .HasColumnType("text");

                    b.Property<int>("TypeId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("FranchiseId");

                    b.HasIndex("TypeId");

                    b.ToTable("Contents");
                });

            modelBuilder.Entity("Kalfyze_backend.Models.Content_Type", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("ContentTypes");
                });

            modelBuilder.Entity("Kalfyze_backend.Models.Franchise", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Franchises");
                });

            modelBuilder.Entity("Kalfyze_backend.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PathToImage")
                        .HasColumnType("text");

                    b.Property<int>("RoleId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Kalfyze_backend.Models.User_Content_Record", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.Property<int>("ContentId")
                        .HasColumnType("integer");

                    b.Property<int>("StatusId")
                        .HasColumnType("integer");

                    b.Property<int>("CapacityProgress")
                        .HasColumnType("integer");

                    b.HasKey("UserId", "ContentId", "StatusId");

                    b.HasIndex("ContentId");

                    b.HasIndex("StatusId");

                    b.ToTable("UserContentRecords");
                });

            modelBuilder.Entity("Kalfyze_backend.Models.User_Content_Record_Log", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CapacityProgress")
                        .HasColumnType("integer");

                    b.Property<int>("ContentId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("LogDatetime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("StatusId")
                        .HasColumnType("integer");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("UserId", "ContentId", "StatusId");

                    b.ToTable("UserContentRecordLogs");
                });

            modelBuilder.Entity("Kalfyze_backend.Models.User_Content_Status", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("UserContentStatuses");
                });

            modelBuilder.Entity("Kalfyze_backend.Models.User_Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("UserRoles");
                });

            modelBuilder.Entity("Kalfyze_backend.Models.Content", b =>
                {
                    b.HasOne("Kalfyze_backend.Models.Franchise", "Franchise")
                        .WithMany("Contents")
                        .HasForeignKey("FranchiseId");

                    b.HasOne("Kalfyze_backend.Models.Content_Type", "Type")
                        .WithMany("Contents")
                        .HasForeignKey("TypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Franchise");

                    b.Navigation("Type");
                });

            modelBuilder.Entity("Kalfyze_backend.Models.User", b =>
                {
                    b.HasOne("Kalfyze_backend.Models.User_Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("Kalfyze_backend.Models.User_Content_Record", b =>
                {
                    b.HasOne("Kalfyze_backend.Models.Content", "Content")
                        .WithMany("ContentRecords")
                        .HasForeignKey("ContentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Kalfyze_backend.Models.User_Content_Status", "Status")
                        .WithMany("ContentRecords")
                        .HasForeignKey("StatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Kalfyze_backend.Models.User", "User")
                        .WithMany("ContentRecords")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Content");

                    b.Navigation("Status");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Kalfyze_backend.Models.User_Content_Record_Log", b =>
                {
                    b.HasOne("Kalfyze_backend.Models.User_Content_Record", "Record")
                        .WithMany("Logs")
                        .HasForeignKey("UserId", "ContentId", "StatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Record");
                });

            modelBuilder.Entity("Kalfyze_backend.Models.Content", b =>
                {
                    b.Navigation("ContentRecords");
                });

            modelBuilder.Entity("Kalfyze_backend.Models.Content_Type", b =>
                {
                    b.Navigation("Contents");
                });

            modelBuilder.Entity("Kalfyze_backend.Models.Franchise", b =>
                {
                    b.Navigation("Contents");
                });

            modelBuilder.Entity("Kalfyze_backend.Models.User", b =>
                {
                    b.Navigation("ContentRecords");
                });

            modelBuilder.Entity("Kalfyze_backend.Models.User_Content_Record", b =>
                {
                    b.Navigation("Logs");
                });

            modelBuilder.Entity("Kalfyze_backend.Models.User_Content_Status", b =>
                {
                    b.Navigation("ContentRecords");
                });

            modelBuilder.Entity("Kalfyze_backend.Models.User_Role", b =>
                {
                    b.Navigation("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
